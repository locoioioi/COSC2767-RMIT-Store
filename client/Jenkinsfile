pipeline {
    agent any
    tools {
        nodejs "Node"
        dockerTool 'Docker'
    }

    environment {
        IMAGE_NAME = 'locoioioi/cosc2767-rmit-store-client' // Docker image name
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/locoioioi/COSC2767-RMIT-Store'
            }
        }

        stage('Install Dependencies') {
            steps {
                cache(caches: [
                    arbitraryFileCache(
                        path: 'client/node_modules',
                        cacheValidityDecidingFile: 'client/package-lock.json',
                        compressionMethod: 'TARGZ'
                    )
                ]) {
                    dir('client') {
                        sh 'npm ci'
                    }
                }
            }
        }


        stage('Build React App') {
            steps {
                cache(caches: [
                    arbitraryFileCache(
                        path: 'client/dist',
                        cacheValidityDecidingFile: 'client/app/**/*, client/public/**/*, client/.env, client/.env.example, client/package.json'
                    )
                ]) {
                    dir('client') {
                        sh 'npm run build'
                    }
                }
            }
        }

        stage('Archive Artifacts') {
            steps {
                archiveArtifacts artifacts: 'client/dist/**/*', allowEmptyArchive: false
            }
        }

        stage("Test Docker") {
            steps {
                sh 'docker --version'
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                dir('client') {
                    script {
                        // Build the Docker image
                        def customImage = docker.build("${IMAGE_NAME}:latest")

                        // login 
                        docker.withRegistry('https://index.docker.io/v1/', 'locoioioi_dockerhub_token') {
                            // Push the Docker image
                            customImage.push()
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'React.js build and Docker image push completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Check the logs for more details.'
        }
    }
}
